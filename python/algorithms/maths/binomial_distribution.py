import unittest
from math import factorial


def binomial_distribution(successes: int, trials: int, prob: float) -> float:
    """
    Return probability of k successes out of n tries, with p probability for one
    success

    The function uses the factorial function in order to calculate the binomial
    coefficient

    >>> binomial_distribution(3, 5, 0.7)
    0.30870000000000003
    >>> binomial_distribution (2, 4, 0.5)
    0.375
    """
    if successes > trials:
        raise ValueError("""successes must be lower or equal to trials""")
    if trials < 0 or successes < 0:
        raise ValueError("the function is defined for non-negative integers")
    if not isinstance(successes, int) or not isinstance(trials, int):
        raise ValueError("the function is defined for non-negative integers")
    if not 0 < prob < 1:
        raise ValueError("prob has to be in range of 1 - 0")
    probability = (prob**successes) * ((1 - prob) ** (trials - successes))
    # Calculate the binomial coefficient: n! / k!(n-k)!
    coefficient = float(factorial(trials))
    coefficient /= factorial(successes) * factorial(trials - successes)
    return probability * coefficient


class BinomialDistributionTestCase(unittest.TestCase):
    def test_binomial_distribution(self):
        self.assertAlmostEqual(binomial_distribution(3, 5, 0.7), 0.30870000000000003)
        self.assertAlmostEqual(binomial_distribution(2, 4, 0.5), 0.375)
        self.assertAlmostEqual(binomial_distribution(0, 0, 0.5), 1.0)
        self.assertAlmostEqual(binomial_distribution(1, 1, 0.5), 0.5)
        self.assertAlmostEqual(binomial_distribution(0, 1, 0.5), 0.5)
        self.assertAlmostEqual(binomial_distribution(1, 2, 0.5), 0.5)
        self.assertAlmostEqual(binomial_distribution(2, 2, 0.5), 0.25)
        self.assertAlmostEqual(binomial_distribution(2, 3, 0.5), 0.375)
        self.assertAlmostEqual(binomial_distribution(3, 3, 0.5), 0.125)
        self.assertAlmostEqual(binomial_distribution(3, 4, 0.5), 0.3125)
        self.assertAlmostEqual(binomial_distribution(4, 4, 0.5), 0.0625)
        self.assertAlmostEqual(binomial_distribution(4, 5, 0.5), 0.15625)
        self.assertAlmostEqual(binomial_distribution(5, 5, 0.5), 0.03125)
        self.assertAlmostEqual(binomial_distribution(5, 6, 0.5), 0.078125)
        self.assertAlmostEqual(binomial_distribution(6, 6, 0.5), 0.015625)
        self.assertAlmostEqual(binomial_distribution(6, 7, 0.5), 0.046875)
        self.assertAlmostEqual(binomial_distribution(7, 7, 0.5), 0.0078125)
        self.assertAlmostEqual(binomial_distribution(7, 8, 0.5), 0.02734375)
        self.assertAlmostEqual(binomial_distribution(8, 8, 0.5), 0.00390625)
        self.assertAlmostEqual(binomial_distribution(8, 9, 0.5), 0.015625)
        self.assertAlmostEqual(binomial_distribution(9, 9, 0.5), 0.001953125)
        self.assertAlmostEqual(binomial_distribution(9, 10, 0.5), 0.0078125)
        self.assertAlmostEqual(binomial_distribution(10, 10, 0.5), 0.0009765625)
        self.assertAlmostEqual(binomial_distribution(10, 11, 0.5), 0.00390625)
        self.assertAlmostEqual(binomial_distribution(11, 11, 0.5), 0.00048828125)
        self.assertAlmostEqual(binomial_distribution(11, 12, 0.5), 0.001953125)
        self.assertAlmostEqual(binomial_distribution(12, 12, 0.5), 0.000244140625)
        self.assertAlmostEqual(binomial_distribution(12, 13, 0.5), 0.0009765625)
        self.assertAlmostEqual(binomial_distribution(13, 13, 0.5), 0.0001220703125)
        self.assertAlmostEqual(binomial_distribution(13, 14, 0.5), 0.00048828125)
        self.assertAlmostEqual(binomial_distribution(14, 14, 0.5), 6.103515625e-05)
        self.assertAlmostEqual(binomial_distribution(14, 15, 0.5), 0.000244140625)
        self.assertAlmostEqual(binomial_distribution(15, 15, 0.5), 3.0517578125e-05)
        self.assertAlmostEqual(binomial_distribution(15, 16, 0.5), 0.0001220703125)
        self.assertAlmostEqual(binomial_distribution(16, 16, 0.5), 1.52587890625e-05)
        self.assertAlmostEqual(binomial_distribution(16, 17, 0.5), 6.103515625e-05)
        self.assertAlmostEqual(binomial_distribution(17, 17, 0.5), 7.62939453125e-06)
        self.assertAlmostEqual(binomial_distribution(17, 18, 0.5), 3.0517578125e-05)
        self.assertAlmostEqual(binomial_distribution(18, 18, 0.5), 3.814697265625e-06)
        self.assertAlmostEqual(binomial_distribution(18, 19, 0.5), 1.52587890625e-05)
        self.assertAlmostEqual(binomial_distribution(19, 19, 0.5), 1.9073486328125e-06)
        self.assertAlmostEqual(binomial_distribution(19, 20, 0.5), 7.62939453125e-06)
        self.assertAlmostEqual(binomial_distribution(20, 20, 0.5), 9.5367431640625e-07)
        self.assertAlmostEqual(binomial_distribution(20, 21, 0.5), 3.814697265625e-06)
        self.assertAlmostEqual(binomial_distribution(21, 21, 0.5), 4.76837158203125e-07)
        self.assertAlmostEqual(binomial_distribution(21, 22, 0.5), 1.9073486328125e-06)
        self.assertAlmostEqual(binomial_distribution(22, 22, 0.5), 2.384185791015625e-07)
        self.assertAlmostEqual(binomial_distribution(22, 23, 0.5), 9.5367431640625e-07)
        self.assertAlmostEqual(binomial_distribution(23, 23, 0.5), 1.1920928955078125e-07)
        self.assertAlmostEqual(binomial_distribution(23, 24, 0.5), 4.76837158203125e-07)
        self.assertAlmostEqual(binomial_distribution(24, 24, 0.5), 5.960464477539063e-08)
        self.assertAlmostEqual(binomial_distribution(24, 25, 0.5), 2.384185791015625e-07)
        self.assertAlmostEqual(binomial_distribution(25, 25, 0.5), 2.9802322387695312e-08)
        self.assertAlmostEqual(binomial_distribution(25, 26, 0.5), 1.1920928955078125e-07)
        self.assertAlmostEqual(binomial_distribution(26, 26, 0.5), 1.4901161193847656e-08)
        self.assertAlmostEqual(binomial_distribution(26, 27, 0.5), 5.960464477539063e-08)
        self.assertAlmostEqual(binomial_distribution(27, 27, 0.5), 7.450580596923828e-09)
        self.assertAlmostEqual(binomial_distribution(27, 28, 0.5), 2.9802322387695312e-08)
        self.assertAlmostEqual(binomial_distribution(28, 28, 0.5), 3.725290298461914e-09)
        self.assertAlmostEqual(binomial_distribution(28, 29, 0.5), 1.4901161193847656e-08)
        self.assertAlmostEqual(binomial_distribution(29, 29, 0.5), 1.862645149230957e-09)
        self.assertAlmostEqual(binomial_distribution(29, 30, 0.5), 7.450580596923828e-09)
        self.assertAlmostEqual(binomial_distribution(30, 30, 0.5), 9.313225746154785e-10)
        self.assertAlmostEqual(binomial_distribution(30, 31, 0.5), 3.725290298461914e-09)
        self.assertAlmostEqual(binomial_distribution(31, 31, 0.5), 4.656612873077393e-10)
        self.assertAlmostEqual(binomial_distribution(31, 32, 0.5), 1.862645149230957e-09)
        self.assertAlmostEqual(binomial_distribution(32, 32, 0.5), 2.3283064365386963e-10)
        self.assertAlmostEqual(binomial_distribution(32, 33, 0.5), 9.313225746154785e-10)
        self.assertAlmostEqual(binomial_distribution(33, 33, 0.5), 1.1641532182693481e-10)
        self.assertAlmostEqual(binomial_distribution(33, 34, 0.5), 4.656612873077393e-10)
        self.assertAlmostEqual(binomial_distribution(34, 34, 0.5), 5.820766091346741e-11)
        self.assertAlmostEqual(binomial_distribution(34, 35, 0.5), 2.3283064365386963e-10)
        self.assertAlmostEqual(binomial_distribution(35, 35, 0.5), 2.9103830456733704e-11)
        self.assertAlmostEqual(binomial_distribution(35, 36, 0.5), 1.1641532182693481e-10)
        self.assertAlmostEqual(binomial_distribution(36, 36, 0.5), 1.4551915228366852e-11)
        self.assertAlmostEqual(binomial_distribution(36, 37, 0.5), 5.820766091346741e-11)
        self.assertAlmostEqual(binomial_distribution(37, 37, 0.5), 7.275957614183426e-12)
        self.assertAlmostEqual(binomial_distribution(37, 38, 0.5), 2.9103830456733704e-11)
        self.assertAlmostEqual(binomial_distribution(38, 38, 0.5), 3.637978807091713e-12)
        self.assertAlmostEqual(binomial_distribution(38, 39, 0.5), 1.4551915228366852e-11)
        self.assertAlmostEqual(binomial_distribution(39, 39, 0.5), 1.8189894035458565e-12)
        self.assertAlmostEqual(binomial_distribution(39, 40, 0.5), 7.275957614183426e-12)
        self.assertAlmostEqual(binomial_distribution(40, 40, 0.5), 9.094947017729282e-13)
        self.assertAlmostEqual(binomial_distribution(40, 41, 0.5), 3.637978807091713e-12)
        self.assertAlmostEqual(binomial_distribution(41, 41, 0.5), 4.547473508864641e-13)
        self.assertAlmostEqual(binomial_distribution(41, 42, 0.5), 1.8189894035458565e-12)
        self.assertAlmostEqual(binomial_distribution(42, 42, 0.5), 2.2737367544323206e-13)
        self.assertAlmostEqual(binomial_distribution(42, 43, 0.5), 9.094947017729282e-13)
        self.assertAlmostEqual(binomial_distribution(43, 43, 0.5), 1.1368683772161603e-13)
        self.assertAlmostEqual(binomial_distribution(43, 44, 0.5), 4.547473508864641e-13)
        self.assertAlmostEqual(binomial_distribution(44, 44, 0.5), 5.684341886080802e-14)
        self.assertAlmostEqual(binomial_distribution(44, 45, 0.5), 2.2737367544323206e-13)
        self.assertAlmostEqual(binomial_distribution(45, 45, 0.5), 2.842170943040401e-14)
        self.assertAlmostEqual(binomial_distribution(45, 46, 0.5), 1.1368683772161603e-13)
        self.assertAlmostEqual(binomial_distribution(46, 46, 0.5), 1.4210854715202004e-14)
        self.assertAlmostEqual(binomial_distribution(46, 47, 0.5), 5.684341886080802e-14)
        self.assertAlmostEqual(binomial_distribution(47, 47, 0.5), 7.105427357601002e-15)
        self.assertAlmostEqual(binomial_distribution(47, 48, 0.5), 2.842170943040401e-14)
        self.assertAlmostEqual(binomial_distribution(48, 48, 0.5), 3.552713678800501e-15)
        self.assertAlmostEqual(binomial_distribution(48, 49, 0.5), 1.4210854715202004e-14)
        self.assertAlmostEqual(binomial_distribution(49, 49, 0.5), 1.7763568394002505e-15)
        self.assertAlmostEqual(binomial_distribution(49, 50, 0.5), 7.105427357601002e-15)
        self.assertAlmostEqual(binomial_distribution(50, 50, 0.5), 8.881784197001252e-16)
        self.assertAlmostEqual(binomial_distribution(50, 51, 0.5), 3.552713678800501e-15)
        self.assertAlmostEqual(binomial_distribution(51, 51, 0.5), 4.44089209850063e-16)
        self.assertAlmostEqual(binomial_distribution(51, 52, 0.5), 1.7763568394002505e-15)
        self.assertAlmostEqual(binomial_distribution(52, 52, 0.5), 2.220446049250313e-16)
        self.assertAlmostEqual(binomial_distribution(52, 53, 0.5), 8.881784197001252e-16)
        self.assertAlmostEqual(binomial_distribution(53, 53, 0.5), 1.1102230246251565e-16)
        self.assertAlmostEqual(binomial_distribution(53, 54, 0.5), 4.44089209850063e-16)
        self.assertAlmostEqual(binomial_distribution(54, 54, 0.5), 5.551115123125783e-17)
        self.assertAlmostEqual(binomial_distribution(54, 55, 0.5), 2.220446049250313e-16)
        self.assertAlmostEqual(binomial_distribution(55, 55, 0.5), 2.7755575615628914e-17)
        self.assertAlmostEqual(binomial_distribution(55, 56, 0.5), 1.1102230246251565e-16)
        self.assertAlmostEqual(binomial_distribution(56, 56, 0.5), 1.3877787807814457e-17)
        self.assertAlmostEqual(binomial_distribution(56, 57, 0.5), 5.551115123125783e-17)
        self.assertAlmostEqual(binomial_distribution(57, 57, 0.5), 6.938893903907228e-18)
        self.assertAlmostEqual(binomial_distribution(57, 58, 0.5), 2.7755575615628914e-17)
        self.assertAlmostEqual(binomial_distribution(58, 58, 0.5), 3.469446951953614e-18)
        self.assertAlmostEqual(binomial_distribution(58, 59, 0.5), 1.3877787807814457e-17)
        self.assertAlmostEqual(binomial_distribution(59, 59, 0.5), 1.734723475976807e-18)
        self.assertAlmostEqual(binomial_distribution(59, 60, 0.5), 6.938893903907228e-18)
        self.assertAlmostEqual(binomial_distribution(60, 60, 0.5), 8.673617379884035e-19)
        self.assertAlmostEqual(binomial_distribution(60, 61, 0.5), 3.469446951953614e-18)
        self.assertAlmostEqual(binomial_distribution(61, 61, 0.5), 4.336808689942018e-19)
        self.assertAlmostEqual(binomial_distribution(61, 62, 0.5), 1.734723475976807e-18)
        self.assertAlmostEqual(binomial_distribution(62, 62, 0.5), 2.168404344971009e-19)
        self.assertAlmostEqual(binomial_distribution(62, 63, 0.5), 8.673617379884035e-19)
        self.assertAlmostEqual(binomial_distribution(63, 63, 0.5), 1.0842021724855044e-19)
        self.assertAlmostEqual(binomial_distribution(63, 64, 0.5), 4.336808689942018e-19)
        self.assertAlmostEqual(binomial_distribution(64, 64, 0.5), 5.421010862427522e-20)
        self.assertAlmostEqual(binomial_distribution(64, 65, 0.5), 2.168404344971009e-19)
        self.assertAlmostEqual(binomial_distribution(65, 65, 0.5), 2.710505431213761e-20)
        self.assertAlmostEqual(binomial_distribution(65, 66, 0.5), 1.0842021724855044e-19)
        self.assertAlmostEqual(binomial_distribution(66, 66, 0.5), 1.3552527156068805e-20)
        self.assertAlmostEqual(binomial_distribution(66, 67, 0.5), 5.421010862427522e-20)
        self.assertAlmostEqual(binomial_distribution(67, 67, 0.5), 6.776263578034403e-21)
        self.assertAlmostEqual(binomial_distribution(67, 68, 0.5), 2.710505431213761e-20)
        self.assertAlmostEqual(binomial_distribution(68, 68, 0.5), 3.3881317890172014e-21)
        self.assertAlmostEqual(binomial_distribution(68, 69, 0.5), 1.3552527156068805e-20)
        self.assertAlmostEqual(binomial_distribution(69, 69, 0.5), 1.6940658945086007e-21)
        self.assertAlmostEqual(binomial_distribution(69, 70, 0.5), 6.776263578034403e-21)
        self.assertAlmostEqual(binomial_distribution(70, 70, 0.5), 8.470329472543003e-22)
        self.assertAlmostEqual(binomial_distribution(70, 71, 0.5), 3.3881317890172014e-21)
        self.assertAlmostEqual(binomial_distribution(71, 71, 0.5), 4.235164736279002e-22)
        self.assertAlmostEqual(binomial_distribution(71, 72, 0.5), 1.6940658945086007e-21)
        self.assertAlmostEqual(binomial_distribution(72, 72, 0.5), 2.1175823681357507e-22)
        self.assertAlmostEqual(binomial_distribution(72, 73, 0.5), 8.470329472543003e-22)
        self.assertAlmostEqual(binomial_distribution(73, 73, 0.5), 1.0587914603178759e-22)
        self.assertAlmostEqual(binomial_distribution(73, 74, 0.5), 4.235164736279002e-22)
        self.assertAlmostEqual(binomial_distribution(74, 74, 0.5), 5.298955920348753e-23)
        self.assertAlmostEqual(binomial_distribution(74, 75, 0.5), 2.1175823681357507e-22)
        self.assertAlmostEqual(binomial_distribution(75, 75, 0.5), 2.6473692101696887e-23)
        self.assertAlmostEqual(binomial_distribution(75, 76, 0.5), 1.0587914603178759e-22)
        self.assertAlmostEqual(binomial_distribution(76, 76, 0.5), 1.3234893253973448e-23)
        self.assertAlmostEqual(binomial_distribution(76, 77, 0.5), 5.298955920348753e-23)
        self.assertAlmostEqual(binomial_distribution(77, 77, 0.5), 6.623616150435942e-24)
        self.assertAlmostEqual(binomial_distribution(77, 78, 0.5), 2.6473692101696887e-23)
        self.assertAlmostEqual(binomial_distribution(78, 78, 0.5), 3.309211512712111e-24)
        self.assertAlmostEqual(binomial_distribution(78, 79, 0.5), 1.3234893253973448e-23)
        self.assertAlmostEqual(binomial_distribution(79, 79, 0.5), 1.654114156746681e-24)
        self.assertAlmostEqual(binomial_distribution(79, 80, 0.5), 6.623616150435942e-24)
        self.assertAlmostEqual(binomial_distribution(80, 80, 0.5), 8.280770188044927e-25)
        self.assertAlmostEqual(binomial_distribution(80, 81, 0.5), 3.309211512712111e-24)
        self.assertAlmostEqual(binomial_distribution(81, 81, 0.5), 4.136514390890138e-25)
        self.assertAlmostEqual(binomial_distribution(81, 82, 0.5), 1.654114156746681e-24)
        self.assertAlmostEqual(binomial_distribution(82, 82, 0.5), 2.067642695933351e-25)
        self.assertAlmostEqual(binomial_distribution(82, 83, 0.5), 8.280770188044927e-25)
        self.assertAlmostEqual(binomial_distribution(83, 83, 0.5), 1.0350962735056159e-25)
        self.assertAlmostEqual(binomial_distribution(83, 84, 0.5), 4.136514390890138e-25)
        self.assertAlmostEqual(binomial_distribution(84, 84, 0.5), 5.170642988612673e-26)
        self.assertAlmostEqual(binomial_distribution(84, 85, 0.5), 2.067642695933351e-25)
        self.assertAlmostEqual(binomial_distribution(85, 85, 0.5), 2.584553369916689e-26)
        self.assertAlmostEqual(binomial_distribution(85, 86, 0.5), 1.0350962735056159e-25)
        self.assertAlmostEqual(binomial_distribution(86, 86, 0.5), 1.2938703418820199e-26)
        self.assertAlmostEqual(binomial_distribution(86, 87, 0.5), 5.170642988612673e-26)
        self.assertAlmostEqual(binomial_distribution(87, 87, 0.5), 6.426075735765842e-27)
        self.assertAlmostEqual(binomial_distribution(87, 88, 0.5), 2.584553369916689e-26)
        self.assertAlmostEqual(binomial_distribution(88, 88, 0.5), 3.230691712395861e-27)
        self.assertAlmostEqual(binomial_distribution(88, 89, 0.5), 1.2938703418820199e-26)
        self.assertAlmostEqual(binomial_distribution(89, 89, 0.5), 1.6173379273525249e-27)
        self.assertAlmostEqual(binomial_distribution(89, 90, 0.5), 6.426075735765842e-27)
        self.assertAlmostEqual(binomial_distribution(90, 90, 0.5), 8.032594669707303e-28)
        self.assertAlmostEqual(binomial_distribution(90, 91, 0.5), 3.230691712395861e-27)
        self.assertAlmostEqual(binomial_distribution(91, 91, 0.5), 4.038364640494826e-28)
        self.assertAlmostEqual(binomial_distribution(91, 92, 0.5), 1.6173379273525249e-27)
        self.assertAlmostEqual(binomial_distribution(92, 92, 0.5), 2.021672409190656e-28)
        self.assertAlmostEqual(binomial_distribution(92, 93, 0.5), 8.032594669707303e-28)
        self.assertAlmostEqual(binomial_distribution(93, 93, 0.5), 1.0040743337134138e-28)
        self.assertAlmostEqual(binomial_distribution(93, 94, 0.5), 4.038364640494826e-28)
        self.assertAlmostEqual(binomial_distribution(94, 94, 0.5), 5.047955800618533e-29)
        self.assertAlmostEqual(binomial_distribution(94, 95, 0.5), 2.021672409190656e-28)
        self.assertAlmostEqual(binomial_distribution(95, 95, 0.5), 2.52709051148832e-29)
        self.assertAlmostEqual(binomial_distribution(95, 96, 0.5), 1.0040743337134138e-28)
        self.assertAlmostEqual(binomial_distribution(96, 96, 0.5), 1.2550929171417672e-29)
        self.assertAlmostEqual(binomial_distribution(96, 97, 0.5), 5.047955800618533e-29)
        self.assertAlmostEqual(binomial_distribution(97, 97, 0.5), 6.309944750773166e-30)
        self.assertAlmostEqual(binomial_distribution(97, 98, 0.5), 2.52709051148832e-29)
        self.assertAlmostEqual(binomial_distribution(98, 98, 0.5), 3.1588631393604e-30)
        self.assertAlmostEqual(binomial_distribution(98, 99, 0.5), 1.2550929171417672e-29)
        self.assertAlmostEqual(binomial_distribution(99, 99, 0.5), 1.568866146427209e-30)
        self.assertAlmostEqual(binomial_distribution(99, 100, 0.5), 6.309944750773166e-30)
        self.assertAlmostEqual(binomial_distribution(100, 100, 0.5), 7.887430938466457e-31)
        self.assertAlmostEqual(binomial_distribution(100, 101, 0.5), 3.1588631393604e-30)
        self.assertAlmostEqual(binomial_distribution(101, 101, 0.5), 3.9485789242005e-31)
        self.assertAlmostEqual(binomial_distribution(101, 102, 0.5), 1.568866146427209e-30)
        self.assertAlmostEqual(binomial_distribution(102, 102, 0.5), 1.961082683034011e-31)
        self.assertAlmostEqual(binomial_distribution(102, 103, 0.5), 7.887430938466457e-31)
        self.assertAlmostEqual(binomial_distribution(103, 103, 0.5), 9.859288673083072e-32)
        self.assertAlmostEqual(binomial_distribution(103, 104, 0.5), 3.9485789242005e-31)
        self.assertAlmostEqual(binomial_distribution(104, 104, 0.5), 4.935723655250625e-32)
        self.assertAlmostEqual(binomial_distribution(104, 105, 0.5), 1.961082683034011e-31)
        self.assertAlmostEqual(binomial_distribution(105, 105, 0.5), 2.4513533537925137e-32)
        self.assertAlmostEqual(binomial_distribution(105, 106, 0.5), 9.859288673083072e-32)
        self.assertAlmostEqual(binomial_distribution(106, 106, 0.5), 1.232411084135384e-32)
        self.assertAlmostEqual(binomial_distribution(106, 107, 0.5), 4.935723655250625e-32)
        self.assertAlmostEqual(binomial_distribution(107, 107, 0.5), 6.169654569063281e-33)
        self.assertAlmostEqual(binomial_distribution(107, 108, 0.5), 2.4513533537925137e-32)
        self.assertAlmostEqual(binomial_distribution(108, 108, 0.5), 3.064191692240642e-33)
        self.assertAlmostEqual(binomial_distribution(108, 109, 0.5), 1.232411084135384e-32)
        self.assertAlmostEqual(binomial_distribution(109, 109, 0.5), 1.5405138551692305e-33)
        self.assertAlmostEqual(binomial_distribution(109, 110, 0.5), 6.169654569063281e-33)
        self.assertAlmostEqual(binomial_distribution(110, 110, 0.5), 7.711943211329102e-34)
        self.assertAlmostEqual(binomial_distribution(110, 111, 0.5), 3.064191692240642e-33)
        self.assertAlmostEqual(binomial_distribution(111, 111, 0.5), 3.830239615300803e-34)
        self.assertAlmostEqual(binomial_distribution(111, 112, 0.5), 1.5405138551692305e-33)
        self.assertAlmostEqual(binomial_distribution(112, 112, 0.5), 1.925642319961538e-34)
        self.assertAlmostEqual(binomial_distribution(112, 113, 0.5), 7.711943211329102e-34)
        self.assertAlmostEqual(binomial_distribution(113, 113, 0.5), 9.639929014161377e-35)
        self.assertAlmostEqual(binomial_distribution(113, 114, 0.5), 3.830239615300803e-34)
        self.assertAlmostEqual(binomial_distribution(114, 114, 0.5), 4.787799519125999e-35)
        self.assertAlmostEqual(binomial_distribution(114, 115, 0.5), 1.925642319961538e-34)
        self.assertAlmostEqual(binomial_distribution(115, 115, 0.5), 2.407052899951923e-35)
        self.assertAlmostEqual(binomial_distribution(115, 116, 0.5), 9.639929014161377e-35)
        self.assertAlmostEqual(binomial_distribution(116, 116, 0.5), 1.2049911267701721e-35)
        self.assertAlmostEqual(binomial_distribution(116, 117, 0.5), 4.787799519125999e-35)
        self.assertAlmostEqual(binomial_distribution(117, 117, 0.5), 5.984749398907499e-36)
        self.assertAlmostEqual(binomial_distribution(117, 118, 0.5), 2.407052899951923e-35)
        self.assertAlmostEqual(binomial_distribution(118, 118, 0.5), 3.008816124939904e-36)
        self.assertAlmostEqual(binomial_distribution(118, 119, 0.5), 1.2049911267701721e-35)
        self.assertAlmostEqual(binomial_distribution(119, 119, 0.5), 1.5062389084627152e-36)
        self.assertAlmostEqual(binomial_distribution(119, 120, 0.5), 5.984749398907499e-36)
        self.assertAlmostEqual(binomial_distribution(120, 120, 0.5), 7.480936748634374e-37)
        self.assertAlmostEqual(binomial_distribution(120, 121, 0.5), 3.008816124939904e-36)
        self.assertAlmostEqual(binomial_distribution(121, 121, 0.5), 3.76102015617488e-37)
        self.assertAlmostEqual(binomial_distribution(121, 122, 0.5), 1.5062389084627152e-36)
        self.assertAlmostEqual(binomial_distribution(122, 122, 0.5), 1.882798635578394e-37)
        self.assertAlmostEqual(binomial_distribution(122, 123, 0.5), 7.480936748634374e-37)
        self.assertAlmostEqual(binomial_distribution(123, 123, 0.5), 9.351170935792967e-38)
        self.assertAlmostEqual(binomial_distribution(123, 124, 0.5), 3.76102015617488e-37)
        self.assertAlmostEqual(binomial_distribution(124, 124, 0.5), 4.7012751952186e-38)
        self.assertAlmostEqual(binomial_distribution(124, 125, 0.5), 1.882798635578394e-37)
        self.assertAlmostEqual(binomial_distribution(125, 125, 0.5), 2.353498294473993e-38)
        self.assertAlmostEqual(binomial_distribution(125, 126, 0.5), 9.351170935792967e-38)
        self.assertAlmostEqual(binomial_distribution(126, 126, 0.5), 1.168896366974121e-38)
        self.assertAlmostEqual(binomial_distribution(126, 127, 0.5), 4.7012751952186e-38)
        self.assertAlmostEqual(binomial_distribution(127, 127, 0.5), 5.87659499402325e-39)
        self.assertAlmostEqual(binomial_distribution(127, 128, 0.5), 2.353498294473993e-38)
        self.assertAlmostEqual(binomial_distribution(128, 128, 0.5), 2.941872867967491e-39)
        self.assertAlmostEqual(binomial_distribution(128, 129, 0.5), 1.168896366974121e-38)
        self.assertAlmostEqual(binomial_distribution(129, 129, 0.5), 1.4611204587176512e-39)
        self.assertAlmostEqual(binomial_distribution(129, 130, 0.5), 5.87659499402325e-39)
        self.assertAlmostEqual(binomial_distribution(130, 130, 0.5), 7.345743742529063e-40)
        self.assertAlmostEqual(binomial_distribution(130, 131, 0.5), 2.941872867967491e-39)
        self.assertAlmostEqual(binomial_distribution(131, 131, 0.5), 3.677341084959364e-40)
        self.assertAlmostEqual(binomial_distribution(131, 132, 0.5), 1.4611204587176512e-39)
        self.assertAlmostEqual(binomial_distribution(132, 132, 0.5), 1.826400573396564e-40)
        self.assertAlmostEqual(binomial_distribution(132, 133, 0.5), 7.345743742529063e-40)
        self.assertAlmostEqual(binomial_distribution(133, 133, 0.5), 9.182179678161329e-41)
        self.assertAlmostEqual(binomial_distribution(133, 134, 0.5), 3.677341084959364e-40)
        self.assertAlmostEqual(binomial_distribution(134, 134, 0.5), 4.596676356199205e-41)
        self.assertAlmostEqual(binomial_distribution(134, 135, 0.5), 1.826400573396564e-40)
        self.assertAlmostEqual(binomial_distribution(135, 135, 0.5), 2.282000716745705e-41)
        self.assertAlmostEqual(binomial_distribution(135, 136, 0.5), 9.182179678161329e-41)
        self.assertAlmostEqual(binomial_distribution(136, 136, 0.5), 1.1477724597701661e-41)
        self.assertAlmostEqual(binomial_distribution(136, 137, 0.5), 4.596676356199205e-41)
        self.assertAlmostEqual(binomial_distribution(137, 137, 0.5), 5.745845445249006e-42)
        self.assertAlmostEqual(binomial_distribution(137, 138, 0.5), 2.282000716745705e-41)
        self.assertAlmostEqual(binomial_distribution(138, 138, 0.5), 2.852500895932131e-42)
        self.assertAlmostEqual(binomial_distribution(138, 139, 0.5), 1.1477724597701661e-41)
        self.assertAlmostEqual(binomial_distribution(139, 139, 0.5), 1.4347155747127076e-42)
        self.assertAlmostEqual(binomial_distribution(139, 140, 0.5), 5.745845445249006e-42)
        self.assertAlmostEqual(binomial_distribution(140, 140, 0.5), 7.182306806561257e-43)
        self.assertAlmostEqual(binomial_distribution(140, 141, 0.5), 2.852500895932131e-42)
        self.assertAlmostEqual(binomial_distribution(141, 141, 0.5), 3.5656261199151637e-43)
        self.assertAlmostEqual(binomial_distribution(141, 142, 0.5), 1.4347155747127076e-42)
        self.assertAlmostEqual(binomial_distribution(142, 142, 0.5), 1.7933944683908845e-43)
        self.assertAlmostEqual(binomial_distribution(142, 143, 0.5), 7.182306806561257e-43)
        self.assertAlmostEqual(binomial_distribution(143, 143, 0.5), 8.977883508201571e-44)
        self.assertAlmostEqual(binomial_distribution(143, 144, 0.5), 3.5656261199151637e-43)
        self.assertAlmostEqual(binomial_distribution(144, 144, 0.5), 4.457032649893954e-44)
        self.assertAlmostEqual(binomial_distribution(144, 145, 0.5), 1.7933944683908845e-43)
        self.assertAlmostEqual(binomial_distribution(145, 145, 0.5), 2.2417430854886056e-44)
        self.assertAlmostEqual(binomial_distribution(145, 146, 0.5), 8.977883508201571e-44)
        self.assertAlmostEqual(binomial_distribution(146, 146, 0.5), 1.1222354385251964e-44)
        self.assertAlmostEqual(binomial_distribution(146, 147, 0.5), 4.457032649893954e-44)
        self.assertAlmostEqual(binomial_distribution(147, 147, 0.5), 5.571290812367443e-45)
        self.assertAlmostEqual(binomial_distribution(147, 148, 0.5), 2.2417430854886056e-44)
        self.assertAlmostEqual(binomial_distribution(148, 148, 0.5), 2.802178856860757e-45)
        self.assertAlmostEqual(binomial_distribution(148, 149, 0.5), 1.1222354385251964e-44)
        self.assertAlmostEqual(binomial_distribution(149, 149, 0.5), 1.4027942981564955e-45)
        self.assertAlmostEqual(binomial_distribution(149, 150, 0.5), 5.571290812367443e-45)
        self.assertAlmostEqual(binomial_distribution(150, 150, 0.5), 6.964113515459304e-46)
        self.assertAlmostEqual(binomial_distribution(150, 151, 0.5), 2.802178856860757e-45)
        self.assertAlmostEqual(binomial_distribution(151, 151, 0.5), 3.502723571075946e-46)
        self.assertAlmostEqual(binomial_distribution(151, 152, 0.5), 1.4027942981564955e-45)
        self.assertAlmostEqual(binomial_distribution(152, 152, 0.5), 1.7534928726956194e-46)
        self.assertAlmostEqual(binomial_distribution(152, 153, 0.5), 6.964113515459304e-46)
        self.assertAlmostEqual(binomial_distribution(153, 153, 0.5), 8.70514189432413e-47)
        self.assertAlmostEqual(binomial_distribution(153, 154, 0.5), 3.502723571075946e-46)
        self.assertAlmostEqual(binomial_distribution(154, 154, 0.5), 4.378404463844932e-47)
        self.assertAlmostEqual(binomial_distribution(154, 155, 0.5), 1.7534928726956194e-46)
        self.assertAlmostEqual(binomial_distribution(155, 155, 0.5), 2.1918660908695243e-47)
        self.assertAlmostEqual(binomial_distribution(155, 156, 0.5), 8.70514189432413e-47)
        self.assertAlmostEqual(binomial_distribution(156, 156, 0.5), 1.0881427367905168e-47)
        self.assertAlmostEqual(binomial_distribution(156, 157, 0.5), 4.378404463844932e-47)
        self.assertAlmostEqual(binomial_distribution(157, 157, 0.5), 5.473005579806165e-48)
        self.assertAlmostEqual(binomial_distribution(157, 158, 0.5), 2.1918660908695243e-47)
        self.assertAlmostEqual(binomial_distribution(158, 158, 0.5), 2.7398326135869054e-48)
        self.assertAlmostEqual(binomial_distribution(158, 159, 0.5), 1.0881427367905168e-47)
        self.assertAlmostEqual(binomial_distribution(159, 159, 0.5), 1.360178421038146e-48)
        self.assertAlmostEqual(binomial_distribution(159, 160, 0.5), 5.473005579806165e-48)
        self.assertAlmostEqual(binomial_distribution(160, 160, 0.5), 6.841256974757706e-49)
        self.assertAlmostEqual(binomial_distribution(160, 161, 0.5), 2.7398326135869054e-48)
        self.assertAlmostEqual(binomial_distribution(161, 161, 0.5), 3.424790766983632e-49)
        self.assertAlmostEqual(binomial_distribution(161, 162, 0.5), 1.360178421038146e-48)
        self.assertAlmostEqual(binomial_distribution(162, 162, 0.5), 1.7002230262976825e-49)
        self.assertAlmostEqual(binomial_distribution(162, 163, 0.5), 6.841256974757706e-49)
        self.assertAlmostEqual(binomial_distribution(163, 163, 0.5), 8.526571218447133e-50)
        self.assertAlmostEqual(binomial_distribution(163, 164, 0.5), 3.424790766983632e-49)
        self.assertAlmostEqual(binomial_distribution(164, 164, 0.5), 4.28108845872954e-50)
        self.assertAlmostEqual(binomial_distribution(164, 165, 0.5), 1.7002230262976825e-49)
        self.assertAlmostEqual(binomial_distribution(165, 165, 0.5), 2.125278782872103e-50)
        self.assertAlmostEqual(binomial_distribution(165, 166, 0.5), 8.526571218447133e-50)
        self.assertAlmostEqual(binomial_distribution(166, 166, 0.5), 1.0658214023058916e-50)
        self.assertAlmostEqual(binomial_distribution(166, 167, 0.5), 4.28108845872954e-50)
        self.assertAlmostEqual(binomial_distribution(167, 167, 0.5), 5.351360573411925e-51)
        self.assertAlmostEqual(binomial_distribution(167, 168, 0.5), 2.125278782872103e-50)
        self.assertAlmostEqual(binomial_distribution(168, 168, 0.5), 2.6565984785901287e-51)
        self.assertAlmostEqual(binomial_distribution(168, 169, 0.5), 1.0658214023058916e-50)
        self.assertAlmostEqual(binomial_distribution(169, 169, 0.5), 1.3322767528823645e-51)
        self.assertAlmostEqual(binomial_distribution(169, 170, 0.5), 5.351360573411925e-51)
        self.assertAlmostEqual(binomial_distribution(170, 170, 0.5), 6.689200716764907e-52)
        self.assertAlmostEqual(binomial_distribution(170, 171, 0.5), 2.6565984785901287e-51)
        self.assertAlmostEqual(binomial_distribution(171, 171, 0.5), 3.320748098237661e-52)
        self.assertAlmostEqual(binomial_distribution(171, 172, 0.5), 1.3322767528823645e-51)
        self.assertAlmostEqual(binomial_distribution(172, 172, 0.5), 1.6653459411029556e-52)
        self.assertAlmostEqual(binomial_distribution(172, 173, 0.5), 6.689200716764907e-52)
        self.assertAlmostEqual(binomial_distribution(173, 173, 0.5), 8.361500895956134e-53)
        self.assertAlmostEqual(binomial_distribution(173, 174, 0.5), 3.320748098237661e-52)
        self.assertAlmostEqual(binomial_distribution(174, 174, 0.5), 4.150935122797076e-53)
        self.assertAlmostEqual(binomial_distribution(174, 175, 0.5), 1.6653459411029556e-52)
        self.assertAlmostEqual(binomial_distribution(175, 175, 0.5), 2.0816824263786945e-53)
        self.assertAlmostEqual(binomial_distribution(175, 176, 0.5), 8.361500895956134e-53)
        self.assertAlmostEqual(binomial_distribution(176, 176, 0.5), 1.0451876119945167e-53)
        self.assertAlmostEqual(binomial_distribution(176, 177, 0.5), 4.150935122797076e-53)
        self.assertAlmostEqual(binomial_distribution(177, 177, 0.5), 5.188668903496345e-54)
        self.assertAlmostEqual(binomial_distribution(177, 178, 0.5), 2.0816824263786945e-53)
        self.assertAlmostEqual(binomial_distribution(178, 178, 0.5), 2.602102782973368e-54)
        self.assertAlmostEqual(binomial_distribution(178, 179, 0.5), 1.0451876119945167e-53)
        self.assertAlmostEqual(binomial_distribution(179, 179, 0.5), 1.306484514993146e-54)
        self.assertAlmostEqual(binomial_distribution(179, 180, 0.5), 5.188668903496345e-54)
        self.assertAlmostEqual(binomial_distribution(180, 180, 0.5), 6.485836129370431e-55)
        self.assertAlmostEqual(binomial_distribution(180, 181, 0.5), 2.602102782973368e-54)
        self.assertAlmostEqual(binomial_distribution(181, 181, 0.5), 3.25262847871671e-55)
        self.assertAlmostEqual(binomial_distribution(181, 182, 0.5), 1.306484514993146e-54)
        self.assertAlmostEqual(binomial_distribution(182, 182, 0.5), 1.6331056437414325e-55)
        self.assertAlmostEqual(binomial_distribution(182, 183, 0.5), 6.485836129370431e-55)
        self.assertAlmostEqual(binomial_distribution(183, 183, 0.5), 8.107295161713039e-56)
        self.assertAlmostEqual(binomial_distribution(183, 184, 0.5), 3.25262847871671e-55)
        self.assertAlmostEqual(binomial_distribution(184, 184, 0.5), 4.065785598395888e-56)
        self.assertAlmostEqual(binomial_distribution(184, 185, 0.5), 1.6331056437414325e-55)
        self.assertAlmostEqual(binomial_distribution(185, 185, 0.5), 2.0413820546767906e-56)
        self.assertAlmostEqual(binomial_distribution(185, 186, 0.5), 8.107295161713039e-56)
        self.assertAlmostEqual(binomial_distribution(186, 186, 0.5), 1.0134118952141299e-56)
        self.assertAlmostEqual(binomial_distribution(186, 187, 0.5), 4.065785598395888e-56)
        self.assertAlmostEqual(binomial_distribution(187, 187, 0.5), 5.082232997994861e-57)
        self.assertAlmostEqual(binomial_distribution(187, 188, 0.5), 2.0413820546767906e-56)
        self.assertAlmostEqual(binomial_distribution(188, 188, 0.5), 2.551727568345988e-57)
        self.assertAlmostEqual(binomial_distribution(188, 189, 0.5), 1.0134118952141299e-56)
        self.assertAlmostEqual(binomial_distribution(189, 189, 0.5), 1.2667648690176624e-57)
        self.assertAlmostEqual(binomial_distribution(189, 190, 0.5), 5.082232997994861e-57)
        self.assertAlmostEqual(binomial_distribution(190, 190, 0.5), 6.352791247493576e-58)
        self.assertAlmostEqual(binomial_distribution(190, 191, 0.5), 2.551727568345988e-57)
        self.assertAlmostEqual(binomial_distribution(191, 191, 0.5), 3.189659460432486e-58)
        self.assertAlmostEqual(binomial_distribution(191, 192, 0.5), 1.2667648690176624e-57)
        self.assertAlmostEqual(binomial_distribution(192, 192, 0.5), 1.583456086272078e-58)
        self.assertAlmostEqual(binomial_distribution(192, 193, 0.5), 6.352791247493576e-58)
        self.assertAlmostEqual(binomial_distribution(193, 193, 0.5), 7.94098905936697e-59)
        self.assertAlmostEqual(binomial_distribution(193, 194, 0.5), 3.189659460432486e-58)
        self.assertAlmostEqual(binomial_distribution(194, 194, 0.5), 3.987074325540608e-59)
        self.assertAlmostEqual(binomial_distribution(194, 195, 0.5), 1.583456086272078e-58)
        self.assertAlmostEqual(binomial_distribution(195, 195, 0.5), 1.9793201078400975e-59)
        self.assertAlmostEqual(binomial_distribution(195, 196, 0.5), 7.94098905936697e-59)
        self.assertAlmostEqual(binomial_distribution(196, 196, 0.5), 9.926236324208713e-60)
        self.assertAlmostEqual(binomial_distribution(196, 197, 0.5), 3.987074325540608e-59)
        self.assertAlmostEqual(binomial_distribution(197, 197, 0.5), 4.98384290692576e-60)
        self.assertAlmostEqual(binomial_distribution(197, 198, 0.5), 1.9793201078400975e-59)
        self.assertAlmostEqual(binomial_distribution(198, 198, 0.5), 2.474150134800121e-60)
        self.assertAlmostEqual(binomial_distribution(198, 199, 0.5), 9.926236324208713e-60)
        self.assertAlmostEqual(binomial_distribution(199, 199, 0.5), 1.2407795405260891e-60)
        self.assertAlmostEqual(binomial_distribution(199, 200, 0.5), 4.98384290692576e-60)
        self.assertAlmostEqual(binomial_distribution(200, 200, 0.5), 6.2298036336572e-61)
        self.assertAlmostEqual(binomial_distribution(200, 201, 0.5), 2.474150134800121e-60)
        self.assertAlmostEqual(binomial_distribution(201, 201, 0.5), 3.092687668500151e-61)
        self.assertAlmostEqual(binomial_distribution(201, 202, 0.5), 1.2407795405260891e-60)
        self.assertAlmostEqual(binomial_distribution(202, 202, 0.5), 1.5510244256576114e-61)
        self.assertAlmostEqual(binomial_distribution(202, 203, 0.5), 6.2298036336572e-61)
        self.assertAlmostEqual(binomial_distribution(203, 203, 0.5), 7.7872545419965e-62)
        self.assertAlmostEqual(binomial_distribution(203, 204, 0.5), 3.092687668500151e-61)
        self.assertAlmostEqual(binomial_distribution(204, 204, 0.5), 3.865859585625188e-62)
        self.assertAlmostEqual(binomial_distribution(204, 205, 0.5), 1.5510244256576114e-61)
        self.assertAlmostEqual(binomial_distribution(205, 205, 0.5), 1.9387805320715143e-62)
        self.assertAlmostEqual(binomial_distribution(205, 206, 0.5), 7.7872545419965e-62)
        self.assertAlmostEqual(binomial_distribution(206, 206, 0.5), 9.734068177495625e-63)
        self.assertAlmostEqual(binomial_distribution(206, 207, 0.5), 3.865859585625188e-62)
        self.assertAlmostEqual(binomial_distribution(207, 207, 0.5), 4.832324482031485e-63)
        self.assertAlmostEqual(binomial_distribution(207, 208, 0.5), 1.9387805320715143e-62)
        self.assertAlmostEqual(binomial_distribution(208, 208, 0.5), 2.4234756650893928e-63)
        self.assertAlmostEqual(binomial_distribution(208, 209, 0.5), 9.734068177495625e-63)
        self.assertAlmostEqual(binomial_distribution(209, 209, 0.5), 1.2167585221869531e-63)
        self.assertAlmostEqual(binomial_distribution(209, 210, 0.5), 4.832324482031485e-63)
        self.assertAlmostEqual(binomial_distribution(210, 210, 0.5), 6.040405602539356e-64)
        self.assertAlmostEqual(binomial_distribution(210, 211, 0.5), 2.4234756650893928e-63)
        self.assertAlmostEqual(binomial_distribution(211, 211, 0.5), 3.029344581361741e-64)
        self.assertAlmostEqual(binomial_distribution(211, 212, 0.5), 1.2167585221869531e-63)
        self.assertAlmostEqual(binomial_distribution(212, 212, 0.5), 1.5209481527336914e-64)
        self.assertAlmostEqual(binomial_distribution(212, 213, 0.5), 6.040405602539356e-64)
        self.assertAlmostEqual(binomial_distribution(213, 213, 0.5), 7.550507003174195e-65)
        self.assertAlmostEqual(binomial_distribution(213, 214, 0.5), 3.029344581361741e-64)
        self.assertAlmostEqual(binomial_distribution(214, 214, 0.5), 3.786680726702176e-65)
        self.assertAlmostEqual(binomial_distribution(214, 215, 0.5), 1.5209481527336914e-64)
        self.assertAlmostEqual(binomial_distribution(215, 215, 0.5), 1.9011851909171143e-65)
        self.assertAlmostEqual(binomial_distribution(215, 216, 0.5), 7.550507003174195e-65)
        self.assertAlmostEqual(binomial_distribution(216, 216, 0.5), 9.438133753967744e-66)
        self.assertAlmostEqual(binomial_distribution(216, 217, 0.5), 3.786680726702176e-65)
        self.assertAlmostEqual(binomial_distribution(217, 217, 0.5), 4.73335090837772e-66)
        self.assertAlmostEqual(binomial_distribution(217, 218, 0.5), 1.9011851909171143e-65)
        self.assertAlmostEqual(binomial_distribution(218, 218, 0.5), 2.376481488646393e-66)
        self.assertAlmostEqual(binomial_distribution(218, 219, 0.5), 9.438133753967744e-66)
        self.assertAlmostEqual(binomial_distribution(219, 219, 0.5), 1.179766719245968e-66)
        self.assertAlmostEqual(binomial_distribution(219, 220, 0.5), 4.73335090837772e-66)
        self.assertAlmostEqual(binomial_distribution(220, 220, 0.5), 5.91668863547215e-67)
        self.assertAlmostEqual(binomial_distribution(220, 221, 0.5), 2.376481488646393e-66)
        self.assertAlmostEqual(binomial_distribution(221, 221, 0.5), 2.970601860807991e-67)
        self.assertAlmostEqual(binomial_distribution(221, 222, 0.5), 1.179766719245968e-66)
        self.assertAlmostEqual(binomial_distribution(222, 222, 0.5), 1.47470839905746e-67)
        self.assertAlmostEqual(binomial_distribution(222, 223, 0.5), 5.91668863547215e-67)
        self.assertAlmostEqual(binomial_distribution(223, 223, 0.5), 7.395860794340187e-68)
        self.assertAlmostEqual(binomial_distribution(223, 224, 0.5), 2.970601860807991e-67)
        self.assertAlmostEqual(binomial_distribution(224, 224, 0.5), 3.713252326009989e-68)
        self.assertAlmostEqual(binomial_distribution(224, 225, 0.5), 1.47470839905746e-67)
        self.assertAlmostEqual(binomial_distribution(225, 225, 0.5), 1.843385498821825e-68)
        self.assertAlmostEqual(binomial_distribution(225, 226, 0.5), 7.395860794340187e-68)
        self.assertAlmostEqual(binomial_distribution(226, 226, 0.5), 9.244825992925234e-69)
        self.assertAlmostEqual(binomial_distribution(226, 227, 0.5), 3.713252326009989e-68)
        self.assertAlmostEqual(binomial_distribution(227, 227, 0.5), 4.641565407512486e-69)
        self.assertAlmostEqual(binomial_distribution(227, 228, 0.5), 1.843385498821825e-68)
        self.assertAlmostEqual(binomial_distribution(228, 228, 0.5), 2.304231873527282e-69)
        self.assertAlmostEqual(binomial_distribution(228, 229, 0.5), 9.244825992925234e-69)
        self.assertAlmostEqual(binomial_distribution(229, 229, 0.5), 1.1556032491156543e-69)
        self.assertAlmostEqual(binomial_distribution(229, 230, 0.5), 4.641565407512486e-69)
        self.assertAlmostEqual(binomial_distribution(230, 230, 0.5), 5.801956759390607e-70)
        self.assertAlmostEqual(binomial_distribution(230, 231, 0.5), 2.304231873527282e-69)
        self.assertAlmostEqual(binomial_distribution(231, 231, 0.5), 2.880289841909102e-70)
        self.assertAlmostEqual(binomial_distribution(231, 232, 0.5), 1.1556032491156543e-69)
        self.assertAlmostEqual(binomial_distribution(232, 232, 0.5), 1.4445040613945678e-70)
        self.assertAlmostEqual(binomial_distribution(232, 233, 0.5), 5.801956759390607e-70)
        self.assertAlmostEqual(binomial_distribution(233, 233, 0.5), 7.252445949238259e-71)
        self.assertAlmostEqual(binomial_distribution(233, 234, 0.5), 2.880289841909102e-70)
        self.assertAlmostEqual(binomial_distribution(234, 234, 0.5), 3.600362302386377e-71)
        self.assertAlmostEqual(binomial_distribution(234, 235, 0.5), 1.4445040613945678e-70)
        self.assertAlmostEqual(binomial_distribution(235, 235, 0.5), 1.8056300767432097e-71)
        self.assertAlmostEqual(binomial_distribution(235, 236, 0.5), 7.252445949238259e-71)
        self.assertAlmostEqual(binomial_distribution(236, 236, 0.5), 9.065557436547824e-72)
        self.assertAlmostEqual(binomial_distribution(236, 237, 0.5), 3.600362302386377e-71)
        self.assertAlmostEqual(binomial_distribution(237, 237, 0.5), 4.500452877982972e-72)
        self.assertAlmostEqual(binomial_distribution(237, 238, 0.5), 1.8056300767432097e-71)
        self.assertAlmostEqual(binomial_distribution(238, 238, 0.5), 2.257037595929012e-72)
        self.assertAlmostEqual(binomial_distribution(238, 239, 0.5), 9.065557436547824e-72)
        self.assertAlmostEqual(binomial_distribution(239, 239, 0.5), 1.133194679568478e-72)
        self.assertAlmostEqual(binomial_distribution(239, 240, 0.5), 4.500452877982972e-72)
        self.assertAlmostEqual(binomial_distribution(240, 240, 0.5), 5.625566097478715e-73)
        self.assertAlmostEqual(binomial_distribution(240, 241, 0.5), 2.257037595929012e-72)
        self.assertAlmostEqual(binomial_distribution(241, 241, 0.5), 2.821296994911265e-73)
        self.assertAlmostEqual(binomial_distribution(241, 242, 0.5), 1.133194679568478e-72)
        self.assertAlmostEqual(binomial_distribution(242, 242, 0.5), 1.4164933494605985e-73)
        self.assertAlmostEqual(binomial_distribution(242, 243, 0.5), 5.625566097478715e-73)
        self.assertAlmostEqual(binomial_distribution(243, 243, 0.5), 7.031957621848394e-74)
        self.assertAlmostEqual(binomial_distribution(243, 244, 0.5), 2.821296994911265e-73)
        self.assertAlmostEqual(binomial_distribution(244, 244, 0.5), 3.526621243639081e-74)
        self.assertAlmostEqual(binomial_distribution(244, 245, 0.5), 1.4164933494605985e-73)
        self.assertAlmostEqual(binomial_distribution(245, 245, 0.5), 1.770616686825748e-74)
        self.assertAlmostEqual(binomial_distribution(245, 246, 0.5), 7.031957621848394e-74)
        self.assertAlmostEqual(binomial_distribution(246, 246, 0.5), 8.789947027310493e-75)
        self.assertAlmostEqual(binomial_distribution(246, 247, 0.5), 3.526621243639081e-74)
        self.assertAlmostEqual(binomial_distribution(247, 247, 0.5), 4.408276554548851e-75)
        self.assertAlmostEqual(binomial_distribution(247, 248, 0.5), 1.770616686825748e-74)
        self.assertAlmostEqual(binomial_distribution(248, 248, 0.5), 2.213270858532185e-75)
        self.assertAlmostEqual(binomial_distribution(248, 249, 0.5), 8.789947027310493e-75)
        self.assertAlmostEqual(binomial_distribution(249, 249, 0.5), 1.0987433784138116e-75)
        self.assertAlmostEqual(binomial_distribution(249, 250, 0.5), 4.408276554548851e-75)
        self.assertAlmostEqual(binomial_distribution(250, 250, 0.5), 5.510345693186064e-76)
        self.assertAlmostEqual(binomial_distribution(250, 251, 0.5), 2.213270858532185e-75)
        self.assertAlmostEqual(binomial_distribution(251, 251, 0.5), 2.766588573165231e-76)
        self.assertAlmostEqual(binomial_distribution(251, 252, 0.5), 1.0987433784138116e-75)
        self.assertAlmostEqual(binomial_distribution(252, 252, 0.5), 1.3734292230172645e-76)
        self.assertAlmostEqual(binomial_distribution(252, 253, 0.5), 5.510345693186064e-76)
        self.assertAlmostEqual(binomial_distribution(253, 253, 0.5), 6.88793211648258e-77)
        self.assertAlmostEqual(binomial_distribution(253, 254, 0.5), 2.766588573165231e-76)
        self.assertAlmostEqual(binomial_distribution(254, 254, 0.5), 3.4582357164565387e-77)
        self.assertAlmostEqual(binomial_distribution(254, 255, 0.5), 1.3734292230172645e-76)
        self.assertAlmostEqual(binomial_distribution(255, 255, 0.5), 1.7167865287715806e-77)
        self.assertAlmostEqual(binomial_distribution(255, 256, 0.5), 6.88793211648258e-77)
        self.assertAlmostEqual(binomial_distribution(256, 256, 0.5), 8.609915145603225e-78)
        self.assertAlmostEqual(binomial_distribution(256, 257, 0.5), 3.4582357164565387e-77)
        self.assertAlmostEqual(binomial_distribution(257, 257, 0.5), 4.322794645570673e-78)
        self.assertAlmostEqual(binomial_distribution(257, 258, 0.5), 1.7167865287715806e-77)
        self.assertAlmostEqual(binomial_distribution(258, 258, 0.5), 2.1459831609644758e-78)
        self.assertAlmostEqual(binomial_distribution(258, 259, 0.5), 8.609915145603225e-78)
        self.assertAlmostEqual(binomial_distribution(259, 259, 0.5), 1.076239393200403e-78)
        self.assertAlmostEqual(binomial_distribution(259, 260, 0.5), 4.322794645570673e-78)
        self.assertAlmostEqual(binomial_distribution(260, 260, 0.5), 5.403493306963342e-79)
        self.assertAlmostEqual(binomial_distribution(260, 261, 0.5), 2.1459831609644758e-78)
        self.assertAlmostEqual(binomial_distribution(261, 261, 0.5), 2.6824789512055947e-79)
        self.assertAlmostEqual(binomial_distribution(261, 262, 0.5), 1.076239393200403e-78)
        self.assertAlmostEqual(binomial_distribution(262, 262, 0.5), 1.3452992415005037e-79)
        self.assertAlmostEqual(binomial_distribution(262, 263, 0.5), 5.403493306963342e-79)
        self.assertAlmostEqual(binomial_distribution(263, 263, 0.5), 6.754366633704178e-80)
        self.assertAlmostEqual(binomial_distribution(263, 264, 0.5), 2.6824789512055947e-79)
        self.assertAlmostEqual(binomial_distribution(264, 264, 0.5), 3.3530986890069934e-80)
        self.assertAlmostEqual(binomial_distribution(264, 265, 0.5), 1.3452992415005037e-79)
        self.assertAlmostEqual(binomial_distribution(265, 265, 0.5), 1.6816240518756296e-80)
        self.assertAlmostEqual(binomial_distribution(265, 266, 0.5), 6.754366633704178e-80)
        self.assertAlmostEqual(binomial_distribution(266, 266, 0.5), 8.442958292130222e-81)
        self.assertAlmostEqual(binomial_distribution(266, 267, 0.5), 3.3530986890069934e-80)
        self.assertAlmostEqual(binomial_distribution(267, 267, 0.5), 4.191373361258742e-