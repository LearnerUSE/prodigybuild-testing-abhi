#include <stdio.h>

#define N 8

// This function is to check whether the passed positions are attacking each other or not.
int isAttack(int i,int j, int board[N][N]) {
    int k,l;
    for(k=0;k<N;k++)
    {
        if((board[i][k] == 1) || (board[k][j] == 1))
            return 1;
    }

    for(k=0;k<N;k++)
    {
        for(l=0;l<N;l++)
        {
            if(((k+l) == (i+j)) || ((k-l) == (i-j)))
            {
                if(board[k][l] == 1)
                    return 1;
            }
        }
    }
    return 0;
}

int NQueen(int n, int board[N][N]) {
    int i,j;
    if(n==0)
        return 1;
    for(i=0;i<N;i++)
    {
        for(j=0;j<N;j++)
        {
            //checking if we can place a queen here or not
            //queen will not be placed if the place is being attacked
            //or already occupied
            if((!isAttack(i,j,board)) && (board[i][j]!=1))
            {
                board[i][j] = 1;

                //recursion
                //wether we can put the next queen with this arrangment or not
                if(NQueen(n-1, board) == 1)
                {
                    return 1;
                }
                board[i][j] = 0;
            }
        }
    }
    return 0;
}

int main(void) {
    int board[N][N];
    for(int i=0;i<N;i++)
    {
        for(int j=0;j<N;j++)
        {
            board[i][j] = 0;
        }
    }
    //calling the function
    NQueen(N,board);
}